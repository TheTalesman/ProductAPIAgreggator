version: '3.3'

services:
  redis:
    image: redis
    command: redis-server --requirepass Redis2019! --port 6379
    ports:
      - "6379:6379"
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.redis.loadbalancer.server.port=6379"

  product_api:
    build: .
    volumes:
    - ../../:/go/src/ProductAPIAgreggator:Z
    working_dir: /go/src/ProductAPIAgreggator/part-1/src
    environment:
      - API_DEBUGMODE=${API_GIN_DEBUG_MODE}
      - API_MONGODBNAME=${DB_NAME}
      - API_MONGODBURL=mongodb://${DB_USER}:${DB_PASS}@mongo/${DB_NAME}

    ports: 
      - "8081"
    command: ./product-api
    depends_on: 
      - redis
      - mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.product_api.rule=Host(`localhost`)"
      - "traefik.http.services.product_api.loadbalancer.server.port=8081"
    
  reverse-proxy:
      # The official v2.0 Traefik docker image
      image: traefik:v2.0
      # Enables the web UI and tells Traefik to listen to docker
      command: --api.insecure=true --providers.docker 
      ports:
        # The HTTP port
        - "80:80"
        # The Web UI (enabled by --api.insecure=true)
        - "8080:8080"
        
     
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock:Z
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASS}
      
    volumes:
      - ./appdata/db:/data/db
    ports:
      - "27017:27017"
    labels:
      - "traefik.enable=false"
      
